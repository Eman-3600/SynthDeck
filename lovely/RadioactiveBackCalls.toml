[manifest]
version = "1.0.0"
priority = 0

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if scoring_hand[i].ability.name == 'Glass Card' and not scoring_hand[i].debuff and pseudorandom('glass') < G.GAME.probabilities.normal/scoring_hand[i].ability.extra then"
position = "before"
payload = '''
if G.GAME.selected_back_key and type(G.GAME.selected_back_key.eman_should_destroy) == "function" and G.GAME.selected_back_key:eman_should_destroy(scoring_hand[i]) then
    destroyed = true
end
'''
match_indent = true
times = 1



[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if scoring_hand[i].debuff then"
position = "before"
payload = '''
if G.GAME.selected_back_key and type(G.GAME.selected_back_key.eman_modify_played_card) == "function" then
    G.GAME.selected_back_key:eman_modify_played_card(scoring_hand[i])
end
'''
match_indent = false
times = 1



[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
scoring_hand[i].lucky_trigger = nil
'''
position = "before"
payload = '''
if G.GAME.selected_back_key and type(G.GAME.selected_back_key.eman_add_card_effect) == "function" then
    local eval = G.GAME.selected_back_key:eman_add_card_effect(scoring_hand[i])

    if eval then
        table.insert(effects, eval)
    end
end
'''
match_indent = true
times = 1